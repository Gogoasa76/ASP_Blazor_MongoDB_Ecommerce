@page "/"
@using Licenta_Ecommerce_Mongo.DBConnections;
@using Licenta_Ecommerce_Mongo.Data;
@inject IJSRuntime js
@inject MongoDBWrapper mongo
@using Licenta_Ecommerce_Mongo.Shared.Components


<MudLayout Class="mt-10">
    <MudGrid Spacing="4" Justify="Justify.Center">
        @foreach (Product product in products)
        {
            <MudItem>
                <Card product="product" />
            </MudItem>
        }
    </MudGrid>
</MudLayout>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    public List<Product> products { get; set; } = new();
    private async Task DisplayGreetingAlert()
    {
        var authState = await authenticationState;
        var message = $"Hello {authState.User.Identity.Name}";
        await js.InvokeVoidAsync("alert", message);
    }
    public async void AddProduct()
    {
        await mongo.AddItem(new("nume","description","image",new (),1,1,1));
    }
    protected override async Task OnInitializedAsync()
    {
        products = await mongo.GetAll();
    }
}