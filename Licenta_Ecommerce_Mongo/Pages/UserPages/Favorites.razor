@page "/favorites"

@using Licenta_Ecommerce_Mongo.DBConnections;
@using Licenta_Ecommerce_Mongo.Data;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject MongoDBWrapper mongo;
@using Licenta_Ecommerce_Mongo.Shared.Components
<MudLayout Class="mt-10">
	<AuthorizeView>
		<NotAuthorized>
			<h3 class="text-center">Please login to use the cart</h3>
		</NotAuthorized>
		<Authorized>
			<MudGrid Spacing="4" Justify="Justify.Center">
				@if (products.Count == 0)
				{
					<h3 class="text-center">The Cart is empty</h3>
				}
				else
				{
					foreach (Product product in products)
					{

						<MudItem>
							<FavoritesCard product="product" />
						</MudItem>
					}
				}
			</MudGrid>
		</Authorized>
	</AuthorizeView>
</MudLayout>
@code {
	public List<Product> products { get; set; } = new();
	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		string userId = user.Identity!.Name!;
		try
		{
			products = await mongo.GetFavoritesByUserId(userId);
			Console.WriteLine(products.Count);
		}
		catch (Exception)
		{
			//ignore
		}
	}
}
