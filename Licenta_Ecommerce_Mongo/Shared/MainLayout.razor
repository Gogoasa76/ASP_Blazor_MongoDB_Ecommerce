@using Licenta_Ecommerce_Mongo.Authentication;
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<PageTitle>Magazin</PageTitle>

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Style="@($"background:{Colors.DeepPurple.Lighten1};")">
        <MudText Typo="Typo.h5" Class="ml-16" Style="@($"color:{Colors.Grey.Lighten5};")">Magazin</MudText>
        <MudTextField Class="ml-4" @bind-Value="TextValue" Label="Quick search" Variant="Variant.Outlined" Margin="Margin.Dense" Style="@($"background:{Colors.DeepPurple.Lighten5};")" />
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudIconButton Icon="@Icons.Material.Filled.Favorite" Style="@($"color:{Colors.Grey.Lighten5};")" Class="mx-1" Href="favorites" />
                <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" Style="@($"color:{Colors.Grey.Lighten5};")" Class="mx-1" Href="cart" />

                <MudButton Style="@($"color:{Colors.Grey.Lighten5};")" @onclick="Logout" Class="mr-16" Href="javascript:void(0)">Logout</MudButton>
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Material.Filled.Favorite" Style="@($"color:{Colors.Grey.Lighten5};")" Class="mx-1" Href="favorites" />
                <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" Style="@($"color:{Colors.Grey.Lighten5};")" Class="mx-1" Href="cart" />

                <MudButton Variant="Variant.Filled" Color="Color.Info" Class="mx-3" Href="/login">LogIn</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mr-16"  Href="/signup">SignUp</MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>
    <MudMainContent Style="width: 70%" Class="mx-auto" >       
            <NavMenu />
            @Body
    </MudMainContent>
</MudLayout>

@code {
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
    public string TextValue { get; set; }
}